/*
[Variables]
GameExe=
GamePath=                                                      
WinTitle=Path of Exile
WinClass=Direct3DWindowClass
*/
;--------------------------AutoExecute Section. Ends where first return is encountered--------------------------
;.
#NoEnv				;Empty variables will not be checkt if there system environment variables.
#Persistent			;Script may not close until it recieves a ExitApp command.
#KeyHistory 0			;Not needed when only running the script.
ListLines, off			;Not needed when only running the script.
SetTitleMatchMode, 3		;Must be a exact match to the window title.
SendMode, Input			;Send command uses the input method. Will ignore SetKeyDelay.
SetKeyDelay, 100, 50		;Delay for sending keystrokes and press duration time. For use with SendEvent.
SetBatchLines, -1		;Never sleep script in between execution, 'while its running'. Maximum cpu clock.
SetWorkingDir, %A_ScriptDir%	;Set the script to use it's full folder path as it's working directory. In variable A_ScriptDir, the last backslash is excluded.

IntF = 0
IntClick = 1
Key := IntClick

IfExist,%A_ScriptName%
{
    IniRead,GameExe,%A_ScriptName%,Variables,GameExe
    IniRead,GamePath,%A_ScriptName%,Variables,GamePath
    IniRead,WinTitle,%A_ScriptName%,Variables,WinTitle
    IniRead,WinClass,%A_ScriptName%,Variables,WinClass
}
;--------------------------Asking For User Input when variables at the top of this script are blank--------------------------
again:
if (GamePath = "" || GameExe = "" ) 
{
    If (GamePath = "" )
    {
        	InputBox,GamePath,,Here you need to write the path to where the game executable is located. Exclude the executable,,700,130,,,,,
    }
    If (ErrorLevel = 1)
    {
        Exitapp
    }
    If (ErrorLevel = 0)
    {  
        If (GamePath = "")
        {
            MsgBox,,,Please tell me where to find the game,5
            gosub,Again
        }
        Else
        sleep, 10
        IniWrite,%GamePath%,%A_ScriptName%,Variables,GamePath
    }
    If (GameExe = "" )
    {
       InputBox,GameExe,,What is the name of the executable you want to start`, e.g "Game.exe".,,700,130,,,,,
    }
    If (ErrorLevel = 1)
    {
        Exitapp
    }
    If (ErrorLevel = 0)
    {  
        If (GameExe = "")
        {
            MsgBox,,,Please tell me the name of the executable you trying to launch,5
            gosub,Again
        }
        Else
        sleep, 10
        IniWrite,%GameExe%,%A_ScriptName%,Variables,GameExe
    }
}
;--------------------------Starting the game and getting WindowClass and Tittle--------------------------
IfWinNotExist,ahk_exe %GameExe%
{
    run,%GameExe%,%GamePath%,,Process_ID
    sleep, 10
    WinWait ahk_pid %Process_ID%   
    If (WinTitle = "")
    {
        Sleep, 5000
        WinGetActiveTitle,WinTitle
        Sleep, 10
        IniWrite,%WinTitle%,%A_ScriptName%,Variables,WinTitle
    }
    If (WinClass = "")
    {
        Sleep, 5000
        WinGetClass,WinClass
        Sleep, 10
        IniWrite,%WinClass%,%A_ScriptName%,Variables,WinClass
    }
    GroupAdd,GameWindow,ahk_class %WinClass%
    Process,WaitClose,%Process_ID%
    ExitApp
}
else
IfWinExist,ahk_exe %GameExe%
{
    WinActivate,%WinTitle%
    sleep, 10
    WinGet,Process_ID,PID,ahk_exe %GameExe%
    If (WinTitle = "")
    {
        Sleep, 5000
        WinGetActiveTitle,WinTitle
        Sleep, 10
        IniWrite,%WinTitle%,%A_ScriptName%,Variables,WinTitle
    }
    If (WinClass = "")
    {
        Sleep, 5000
        WinGetClass,WinClass
        Sleep,10
        IniWrite,%WinClass%,%A_ScriptName%,Variables,WinClass
    }
    GroupAdd,GameWindow,ahk_class %WinClass%
    Process,WaitClose,%Process_ID%
    ExitApp
}
;--------------------------Hotkey/Window operation section--------------------------
#IfWinActive, ahk_group GameWindow
{ 
;--------------------------Thumb ButtonOne send's 1, next click 2, next click 3,  next click 1 etc...--------------------------
XButton1::
If(IntClick >= 3)
{  
    Send, %Key%
    IntClick = 1
    Key := IntClick
    return
}
else
If(IntClick := IntClick)
{
   Send, %Key%
   IntClick++
   Key := IntClick
}
Return

F::
If IntF = 0
{
   Send, {4 down}{4 up}
    IntF++
    Return
}
If IntF = 1
{  
    Send, {5 down}{5 up}
    IntF = 0
}
Return

Q::
Send, {shift down}
Send, {q down}
KeyWait, q
Send, {q up}
Send, {shift up}
return

Mbutton::
Send, {Shift down}
Send, {Mbutton down}{Mbutton up}
sleep, 800
Send, {s down}{s up}
Send, {shift up}
Return

Rbutton::
keywait, Rbutton, T0.20
If errorlevel = 0
{
	KeyWait, Rbutton, D T0.40
	If errorlevel = 0
	{
        Send, {shift down}
        Send, {w down}
        KeyWait, RButton
        Send, {w up}
        Send, {shift up}
	}
	Else
	{
        	sleep, 150
		Send, {click right}
	}
}
Else
while GetKeyState("Rbutton" , "P")
{
    Send, {a down}{a up}
    Send, {Rbutton down}
    sleep, 1000
    Send, {Rbutton up}
    send, {w down}
    KeyWait, Rbutton
    send, {w up}
    Break
}
Return

v::
If (bToggle = 0){
    Send, {v down}
    bToggle=1
}Else{
    Send, {v up}
    bToggle=0
}
Return
}
