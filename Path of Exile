/*
[Variables]
GameExe=
GamePath=                                               
WinTitle=Path of Exile
WinClass=Direct3DWindowClass
*/
;--------------------------AutoExecute Section. Ends where first return is encountered--------------------------
#NoEnv  
#KeyHistory 0
#SingleInstance force
SetTitleMatchMode  1
SetTitleMatchMode Fast
SendMode, Input
ListLines off
SetBatchLines -1
SetWorkingDir %A_ScriptDir%

{
IfExist,%A_ScriptName%
{
    IniRead,GameExe,%A_ScriptName%,Variables,GameExe
    IniRead,GamePath,%A_ScriptName%,Variables,GamePath
    IniRead,WinTitle,%A_ScriptName%,Variables,WinTitle
    IniRead,WinClass,%A_ScriptName%,Variables,WinClass
}
;--------------------------Asking For User Input when variables at the top of this script are blank--------------------------
again:
if (GamePath = "" || GameExe = "" ) 
{
    If (GamePath = "" )
    {
        	InputBox,GamePath,,Here you need to write the path to where the game executable is located. Exclude the executable,,700,130,,,,,
    }
    If (ErrorLevel = 1)
    {
        Exitapp
    }
    If (ErrorLevel = 0)
    {  
        If (GamePath = "")
        {
            MsgBox,,,Please tell me where to find the game,5
            gosub,Again
        }
        Else
        IniWrite,%GamePath%,%A_ScriptName%,Variables,GamePath
    }
    If (GameExe = "" )
    {
       InputBox,GameExe,,What is the name of the executable you want to start`, e.g "Game.exe".,,700,130,,,,,
    }
    If (ErrorLevel = 1)
    {
        Exitapp
    }
    If (ErrorLevel = 0)
    {  
        If (GameExe = "")
        {
            MsgBox,,,Please tell me the name of the executable you trying to launch,5
            gosub,Again
        }
        Else
        IniWrite,%GameExe%,%A_ScriptName%,Variables,GameExe
    }
}
;--------------------------Starting the game and getting WindowClass and Tittle--------------------------
IfWinNotExist,ahk_exe %GameExe%
{
    run,%GameExe%,%GamePath%,,Process_ID
     WinWait ahk_pid %Process_ID%   
    If (WinTitle = "")
    {
        Sleep, 5000
        WinGetActiveTitle,WinTitle
        Sleep, 5000
        IniWrite,%WinTitle%,%A_ScriptName%,Variables,WinTitle
    }
    If (WinClass = "")
    {
        Sleep, 5000
        WinGetClass,WinClass
        Sleep, 5000
        IniWrite,%WinClass%,%A_ScriptName%,Variables,WinClass
    }
    GroupAdd,GameWindow,ahk_class %WinClass%
    Process,WaitClose,%Process_ID%
    ExitApp
}
else
IfWinExist,ahk_exe %GameExe%
{
    WinActivate,%WinTitle%
    WinGet,Process_ID,PID,ahk_exe %GameExe%
    If (WinTitle = "")
    {
        Sleep,5000
        WinGetActiveTitle,WinTitle
        Sleep,5000
        IniWrite,%WinTitle%,%A_ScriptName%,Variables,WinTitle
    }
    If (WinClass = "")
    {
        Sleep, 5000
        WinGetClass,WinClass
        Sleep,5000
        IniWrite,%WinClass%,%A_ScriptName%,Variables,WinClass
    }
    GroupAdd,GameWindow,ahk_class %WinClass%
    Process,WaitClose,%Process_ID%
    ExitApp
    }
}
;--------------------------Hotkey section--------------------------
#IfWinActive,ahk_group GameWindow
{    
HPPot = 0
MPot = 0

XButton2::
XButton1::
If HPPot = 0
{
   Send, {1 down}{1 up}
    HPPot++
    Return
}
If HPPot = 1
{  
    Send, {2 down}{2 up}
    HPPot ++
    Return
}
If HPPot = 2
{  
    Send, {3 down}{3 up}
    HPPot = 0
}
Return

F::
If MPot = 0
{
   Send, {4 down}{4 up}
    MPot++
    Return
}
If MPot = 1
{  
    Send, {5 down}{5 up}
    MPot = 0
}
Return

Mbutton::
Send, {Shift down}
Send, {Mbutton down}{Mbutton up}
sleep, 800
Send, {d down}{d up}
Send, {shift up}
Return

Lbutton:: 
KeyWait, Lbutton, D T0.15
If errorlevel = 0
{
    Send, {Lbutton down}
    KeyWait, Lbutton
    Send, {Lbutton up}
}
Else
KeyWait, Lbutton, T0.15
If errorlevel = 0
{
    KeyWait,Lbutton, D T0.15
    If errorlevel = 0
    {
        Send, {Shift down}
        KeyWait, Lbutton
        Send, {Shift up}
    }
} 
return

Rbutton:: 
keywait, Rbutton, T0.15
If errorlevel = 0
{
	KeyWait,Rbutton, D T0.15
	If errorlevel = 0
	{
        Send, {shift down}
        Send, {s down}
        KeyWait, RButton
        Send, {s up}
        Send, {shift up}
	}
	Else
	If errorlevel = 1
	{
		Send, {click right}
	}
}
Else
if errorlevel = 1
while GetKeyState("Rbutton", "P") 
{
    Send, {a down}{a up}
    Send, {Rbutton down}
    KeyWait, Rbutton
    Send, {Rbutton up}
	Break
}
return
}
