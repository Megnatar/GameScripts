/*
[Variables]
GameExe=
GamePath=                                                              
WinTitle=The Witcher 3
WinClass=W2ViewportClass
*/
;--------------------------AutoExecute Section. Ends where first return is encountered--------------------------
#NoEnv  
#Persistent
#SingleInstance force
#NoTrayIcon
#KeyHistory 0
ListLines,off
SetBatchLines,-1
SetKeyDelay,20,5
SetWorkingDir %A_ScriptDir%

bAutorun = 0
bFocus = 0
TimerPeriod := 300

IfExist,%A_ScriptName%
{
    IniRead,GameExe,%A_ScriptName%,Variables,GameExe
    IniRead,GamePath,%A_ScriptName%,Variables,GamePath
    IniRead,WinTitle,%A_ScriptName%,Variables,WinTitle
    IniRead,WinClass,%A_ScriptName%,Variables,WinClass
}
;--------------------------Asking For User Input when variables at the top of this script are blank--------------------------
again:
if (GamePath = "" || GameExe = "" ) 
{
    If (GamePath = "" )
    {
        	InputBox,GamePath,,Here you need to write the path to where the game executable is located. Exclude the executable,,700,130,,,,,
    }
    If (ErrorLevel = 1)
    {
        Exitapp
    }
    If (ErrorLevel = 0)
    {  
        If (GamePath = "")
        {
            MsgBox,,,Please tell me where to find the game,5
            gosub,Again
        }
        Else
        IniWrite,%GamePath%,%A_ScriptName%,Variables,GamePath
    }
    If (GameExe = "" )
    {
        InputBox,GameExe,,Set here the name of the executable.,,700,130,,,,,
    }
    If (ErrorLevel = 1)
    {
        Exitapp
    }
    If (ErrorLevel = 0)
    {  
        If (GameExe = "")
        {
            MsgBox,,,Please tell me the name of the executable you trying to launch,5
            gosub,Again
        }
        Else
        IniWrite,%GameExe%,%A_ScriptName%,Variables,GameExe
    }
}
;--------------------------Starting the game and getting WindowClass and Tittle--------------------------
IfWinNotExist,ahk_exe %GameExe%
{
    run,%GameExe%,%GamePath%,,Process_ID
     WinWait ahk_pid %Process_ID%   
    If (WinTitle = "")
    {
        Sleep,1000
        WinGetActiveTitle,WinTitle
        Sleep,1000
        IniWrite,%WinTitle%,%A_ScriptName%,Variables,WinTitle
    }
    If (WinClass = "")
    {
        Sleep,1000
        WinGetClass,WinClass
        Sleep,1000
        IniWrite,%WinClass%,%A_ScriptName%,Variables,WinClass
    }
    GroupAdd,GameWindow,ahk_class %WinClass%
    Process,WaitClose,%Process_ID%
    ExitApp
}
else
IfWinExist,ahk_exe %GameExe%
{
    WinActivate,%WinTitle%
    WinGet,Process_ID,PID,ahk_exe %GameExe%
    If (WinTitle = "")
    {
        Sleep,1000
        WinGetActiveTitle,WinTitle
        Sleep,1000
        IniWrite,%WinTitle%,%A_ScriptName%,Variables,WinTitle
    }
    If (WinClass = "")
    {
        Sleep,1000
        WinGetClass,WinClass
        Sleep,1000
        IniWrite,%WinClass%,%A_ScriptName%,Variables,WinClass
    }
    GroupAdd,GameWindow,ahk_class %WinClass%
    Process,WaitClose,%Process_ID%
    ExitApp
}
;--------------------------Hotkey section--------------------------
#IfWinActive,ahk_group GameWindow
{
;--------------------------Tab--------------------------
Tab::
If (bFocus = 0) {
    SendEvent,{Tab down}
    bFocus=1  
}Else{
    SendEvent,{Tab up}
    bFocus=0
 }
return
;--------------------------XButton1--------------------------
XButton1::
keywait,XButton1
keywait,XButton1,D T0.2
If (errorlevel = 0) 
{
   SendEvent,{Control}
   return
}
Else
If (bAutorun = 0) {
    SendEvent,{w down}
    bAutorun++
}Else{
    SendEvent,{w up}
    bAutorun--
 }
return
;--------------------------XButton2--------------------------
XButton2::
keywait,XButton2
keywait,XButton2,D T0.2
If (errorlevel = 1) {
   SendEvent,{6}{q}{5}
}Else{
    SendEvent,{6}{q}{7}
}
return
;--------------------------Mbutton--------------------------
Mbutton::
keywait,Mbutton
keywait,Mbutton,D T0.2
If (errorlevel = 1) {
   SendEvent,{6}{q}{3}
}Else{
    SendEvent,{6}{q}{4}
}
return
;--------------------------Lbutton--------------------------
Lbutton::
keywait,Lbutton,T0.32
if (errorlevel = 1) 
{
    while GetKeyState("Lbutton","P") 
    {
        SendEvent,{Lbutton down}        
        KeyWait,Lbutton 
    }
    SendEvent,{Lbutton up}  
return 
}
else
keywait,Lbutton,D T0.32  
if (errorlevel = 0)          
{
    sleep,300
    while GetKeyState("Lbutton","P")
    {
        SendEvent,{shift down}{w down}
        KeyWait,Lbutton    
        SendEvent,{shift up}
    }
    return               
 }
else 
SendEvent,{w up}
bAutorun = 0
return 
;--------------------------Rbutton--------------------------
~Rbutton:: 
if varRbtn = 
{    
    varRbtn++
    KeyWait,Rbutton
    settimer,ClearvarRbtn,%TimerPeriod%
    Return
}
if varRbtn >= 1
{
    SendEvent,{q}
    varRbtn =
    settimer,ClearvarRbtn,off
    Return
}
return
;--------------------------W--------------------------
~W::
bAutorun = 0
if varW = 
{    
    varW++
    KeyWait,w
    settimer,ClearvarW,%TimerPeriod%
    Return
}
if varW >= 1
{
    SendEvent,{space down}{w}{space up}        ;If  you rather use dodge,remove everything after the comma and add this: +{w}
    VarW =                                                              ;Maybe SetKeyDelay will need some adjustment. If it doesn't work set it to 100,50
    settimer,ClearvarW,off
    Return
}
return
;--------------------------A--------------------------
~A::
if varA = 
{    
    varA++
    KeyWait,a
    settimer,ClearvarA,%TimerPeriod%
    Return
}
if varA >= 1
{
    SendEvent,{space down}{w}{space up}
    varA =
    settimer,ClearvarA,off
    Return
}
return
;--------------------------S--------------------------
~S::
if varS = 
{    
    varS++
    KeyWait,s
    settimer,ClearvarS,%TimerPeriod%
    Return
}
if varS >= 1
{
    SendEvent,{space down}{s}{space up}
    varS =
    settimer,ClearvarS,off
    Return
}
return
;--------------------------D--------------------------
~D::
if varD = 
{    
    varD++
    KeyWait,d
    settimer,ClearvarD,%TimerPeriod%
    Return
}
if varD >= 1
{
    SendEvent,{space down}{d}{space up}
    varD =
    settimer,ClearvarD,off
    Return
}
return
;--------------------------ClearvarRbtn--------------------------
ClearvarRbtn:
varRbtn =
settimer,ClearvarRbtn,off
Return
;--------------------------ClearvarW--------------------------
ClearvarW:
varW =
settimer,ClearvarW,off
Return
;--------------------------ClearvarA--------------------------
ClearvarA:
varA =
settimer,ClearvarA,off
Return
;--------------------------ClearvarS--------------------------
ClearvarS:
varS =
settimer,ClearvarS,off
Return
;--------------------------ClearvarD--------------------------
ClearvarD:
varD =
WinClass=DXGIFocusProxyWindow
settimer,ClearvarD,off
Return
}
